pipeline {
  agent any
  options {
    skipDefaultCheckout false
  }
  environment {
    harbor=credentials('harbor')
    IMAGE_TAG = sh(returnStdout: true, script: "git rev-parse --short=10 HEAD").trim()
  }
  stages {
    stage("Build docker image") {
      parallel {
        stage("Build docker scrapy image") {
          steps {
            dir('data-crawling/scrapy') {
              sh 'docker build -t 10.33.109.104/parallel-apps/scrapy:${IMAGE_TAG} .'
            }
          }
        }
        stage("Build Docker Pallete image") {
          steps {
            dir('pallete'){
              sh 'docker build -t 10.33.109.104/parallel-apps/pallete:${IMAGE_TAG} .'
            }
          }
        }
        stage("Build Docker pengedit-md Image") {
          steps {
            dir('pengedit-md'){
              sh 'docker build -t 10.33.109.104/parallel-apps/pengedit-md:${IMAGE_TAG} .'
            }
          }
        }
      }
    }
    stage("Login to Harbor Registry") {
      steps {
        sh 'echo $harbor_PSW | docker login 10.33.109.104 -u $harbor_USR --password-stdin'
      }
    }
    stage("Push New data-crawling image") {
      parallel {
        stage("Push Docker Scrapy Image") {
          steps {
            sh 'docker push 10.33.109.104/parallel-apps/scrapy:${IMAGE_TAG}'
          }
        }
        stage("Push Docker Pallete Image") {
          steps {
            sh 'docker push 10.33.109.104/parallel-apps/pallete:${IMAGE_TAG}'
          }
        }
        stage("Push Docker pengedit-md Image") {
          steps {
            sh 'docker push 10.33.109.104/parallel-apps/pengedit-md:${IMAGE_TAG}'
          }
        }
      }
    }
  }
  post {
    success {
      sh 'docker ps'
      sh 'kubectl get pods -n parallel-apps'
    }
  }
}